xaringan:::inf_mr()
xaringan:::inf_mr()
options(htmltools.dir.version = FALSE)
mtcars
tabela <- tibble(Coluna1 = 1, Coluna2 = 2, Coluna3 = 3)
library(tidyverse)
tabela <- tibble(Coluna1 = 1, Coluna2 = 2, Coluna3 = 3)
mtcars
kableExtra::kable(tabela)
kableExtra::kable(tabela, align = c("l", "c", "r"))
tibble(Coluna1 = 1, Coluna2 = 2) %>% kableExtra::kable()
tibble(Coluna1 = 1, Coluna2 = 2) %>% kableExtra::kable(align = c("l", "c"))
knitr::opts_chunk$set(echo = TRUE)
tibble(Coluna1 = c(11, 12), Coluna2 = c(21, 22)) %>%
kableExtra::kable(align = c("r", "c"), caption = "Tabela 1: Exemplo de tabela")
tibble(Coluna1 = c(11, 12), Coluna2 = c(21, 22)) %>%
kableExtra::kable(align = c("r", "c"), caption = "Tabela 1: Exemplo de tabela", row.names = c("Linha 1", "Linha 2"))
tibble(Coluna1 = c(11, 12), Coluna2 = c(21, 22)) %>%
kableExtra::kable(align = c("r", "c"), caption = "Tabela 1: Exemplo de tabela", row.names = c("Linha 1", "Linha 2"))
tibble(Coluna1 = c(11, 12), Coluna2 = c(21, 22)) %>%
kableExtra::kable(align = c("r", "c"), caption = "Tabela 1: Exemplo de tabela", row.names = c("Linha 1", "Linha 2"))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
tibble(Coluna1 = c(11, 12), Coluna2 = c(21, 22)) %>%
kableExtra::kable(align = c("r", "c"), caption = "Tabela 1: Exemplo de tabela", row.names = c("Linha 1", "Linha 2"))
tibble(Coluna1 = c(11, 12), Coluna2 = c(21, 22)) %>%
kableExtra::kable(align = c("l", "r", "c"), caption = "Tabela 1: Exemplo de tabela", row.names = c("Linha 1", "Linha 2"))
tibble(Coluna1 = c(11, 12), Coluna2 = c(21, 22)) %>%
kableExtra::kable(align = c("r", "c"), caption = "Tabela 1: Exemplo de tabela", row.names = c("Linha 1", "Linha 2"))
tibble(Coluna1 = c(11, 12), Coluna2 = c(21, 22)) %>%
kableExtra::kable(align = c("r", "c"), row.names = c("Linha 1", "Linha 2"))
tibble(Coluna1 = c(11, 12), Coluna2 = c(21, 22)) %>%
kableExtra::kable(align = c("r", "c"), caption = "Tabela 1: Exemplo de tabela")
tibble(Coluna1 = c(11, 12), Coluna2 = c(21, 22)) %>%
kableExtra::kable(align = c("r", "c"), caption = "Tabela 1: Exemplo de tabela", row.names = c("", "Linha 1", "Linha 2"))
tibble(Coluna1 = c(11, 12), Coluna2 = c(21, 22)) %>%
kableExtra::kable(align = c("r", "c"), caption = "Tabela 1: Exemplo de tabela", row.names = c(" ", "Linha 1", "Linha 2"))
tibble(Coluna1 = c(11, 12), Coluna2 = c(21, 22)) %>%
kableExtra::kable(align = c("r", "c"), caption = "Tabela 1: Exemplo de tabela")
tibble(Coluna1 = c(11, 12), Coluna2 = c(21, 22)) %>%
kableExtra::kable(align = c("r", "c"), caption = "Tabela 1: Exemplo de tabela")
xaringan:::inf_mr()
xaringan:::inf_mr()
library(tidyverse)
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
plot(c(1:10))
library(bookdown)
install.packages("bookdown")
install.packages("bookdown")
knitr::opts_chunk$set(echo = TRUE)
library(bookdown)
selectInput(
'breaks', label = 'Number of bins:',
choices = c(10, 20, 35, 50), selected = 20
)
library(shiny)
selectInput(
'breaks', label = 'Number of bins:',
choices = c(10, 20, 35, 50), selected = 20
)
renderPlot({
par(mar = c(4, 4, .1, .5))
hist(
faithful$eruptions, as.numeric(input$breaks),
col = 'gray', border = 'white',
xlab = 'Duration (minutes)', main = ''
)
})
selectInput(
'breaks', label = 'Number of bins:',
choices = c(10, 20, 35, 50), selected = 20
)
renderPlot({
par(mar = c(4, 4, .1, .5))
hist(
faithful$eruptions, as.numeric(input$breaks),
col = 'gray', border = 'white',
xlab = 'Duration (minutes)', main = ''
)
})
install.packages("tufte")
pacotes <- c("tidyverse", "rmarkdown", "blogdown",
"bookdown", "tufte", "rticles", "htmlwidgets",
"DT", "plotly", "leaflet", "xaringan")
install.packages(pacotes)
tinytex::install_tinytex()
library(ggplot2)
library(pROC)
library(ROCR)
library(ROCR)
ROCR.simple
data("ROCR.simple")
ROCR.simple
ROCR.simple$labels3 <- ifelse(ROCR.simple$predictions < 0.5, 0, 1)
ROCR.simple$labels5 <- sample(ROCR.simple$labels)
curva1 <- roc(ROCR.simple$labels, ROCR.simple$predictions)
curva2 <- roc(ROCR.simple$labels3, ROCR.simple$predictions)
curva3 <- roc(ROCR.simple$labels5, ROCR.simple$predictions)
ggroc(list(Primeira = curva1, Segunda = curva2, terceira = curva3)) +
scale_color_viridis_d() + theme_bw() +
labs(x = "1-Especificidade", y = "Sensibilidade", title = "Tá bom assim zé?", color = "Curvas")
tibble(prob = runif(100))
library(tidyverse)
tibble(prob = runif(100))
write_csv(tibble(prob = runif(100)))
write_csv(tibble(prob = runif(100)), "dados")
write_csv2(tibble(prob = runif(100)), "dados.csv")
dados <- read_csv2("dados.csv")
curva1 <- roc(dados$labels1, dados$prob)
curva1 <- roc(dados$labels1, dados$prob)
curva2 <- roc(dados$labels1, dados$prob)
curva3 <- roc(dados$labels1, dados$prob)
ggroc(list(Primeira = curva1, Segunda = curva2, terceira = curva3)) +
scale_color_viridis_d() + theme_bw() +
labs(x = "1-Especificidade", y = "Sensibilidade", title = "Tá bom assim zé?", color = "Curvas")
dados <- read_csv2("dados.csv")
curva1 <- roc(dados$labels1, dados$prob)
curva2 <- roc(dados$labels1, dados$prob)
curva3 <- roc(dados$labels1, dados$prob)
ggroc(list(Primeira = curva1, Segunda = curva2, terceira = curva3)) +
scale_color_viridis_d() + theme_bw() +
labs(x = "1-Especificidade", y = "Sensibilidade", title = "Tá bom assim zé?", color = "Curvas")
dados <- read_csv2("dados.csv")
curva1 <- roc(dados$labels1, dados$prob)
curva2 <- roc(dados$labels1, dados$prob)
curva3 <- roc(dados$labels1, dados$prob)
ggroc(list(Primeira = curva1, Segunda = curva2, terceira = curva3)) +
scale_color_viridis_d() + theme_bw() +
labs(x = "1-Especificidade", y = "Sensibilidade", title = "Tá bom assim zé?", color = "Curvas")
dados <- read_csv2("dados.csv")
curva1 <- roc(dados$labels1, dados$prob)
curva2 <- roc(dados$labels1, dados$prob)
curva3 <- roc(dados$labels1, dados$prob)
ggroc(list(Elevada = curva1, Segunda = curva2, terceira = curva3)) +
scale_color_viridis_d() + theme_bw() +
labs(x = "1-Especificidade", y = "Sensibilidade", title = "Tá bom assim zé?", color = "Curvas")
curva1 <- roc(dados$labels1, dados$prob)
curva2 <- roc(dados$labels2, dados$prob)
curva3 <- roc(dados$labels3, dados$prob)
ggroc(list(Elevada = curva1, Segunda = curva2, terceira = curva3)) +
scale_color_viridis_d() + theme_bw() +
labs(x = "1-Especificidade", y = "Sensibilidade", title = "Tá bom assim zé?", color = "Curvas")
curva1 <- roc(dados$labels1, dados$prob)
curva2 <- roc(dados$labels2, dados$prob)
curva3 <- roc(dados$labels3, dados$prob)
ggroc(list(Elevada = curva1, Segunda = curva2, terceira = curva3)) +
scale_color_viridis_d() + theme_bw() +
labs(x = "1-Especificidade", y = "Sensibilidade", title = "Tá bom assim zé?", color = "Curvas")
dados <- read_csv2("dados.csv")
curva1 <- roc(dados$labels1, dados$prob)
curva2 <- roc(dados$labels2, dados$prob)
curva3 <- roc(dados$labels3, dados$prob)
ggroc(list(Elevada = curva1, Segunda = curva2, terceira = curva3)) +
scale_color_viridis_d() + theme_bw() +
labs(x = "1-Especificidade", y = "Sensibilidade", title = "Tá bom assim zé?", color = "Curvas")
dados <- read_csv2("dados.csv")
curva1 <- roc(dados$labels1, dados$prob)
curva2 <- roc(dados$labels2, dados$prob)
curva3 <- roc(dados$labels3, dados$prob)
ggroc(list(Elevada = curva1, Segunda = curva2, terceira = curva3)) +
scale_color_viridis_d() + theme_bw() +
labs(x = "1-Especificidade", y = "Sensibilidade", title = "Tá bom assim zé?", color = "Curvas")
dados <- read_csv2("dados.csv")
curva1 <- roc(dados$labels1, dados$prob)
curva2 <- roc(dados$labels2, dados$prob)
curva3 <- roc(dados$labels3, dados$prob)
ggroc(list(Elevada = curva1, Segunda = curva2, terceira = curva3)) +
scale_color_viridis_d() + theme_bw() +
labs(x = "1-Especificidade", y = "Sensibilidade", title = "Tá bom assim zé?", color = "Curvas")
ggroc(list(Elevada = curva1, Segunda = curva2, terceira = curva3)) +
scale_color_viridis_d() + theme_bw() +
labs(x = "1-Especificidade", y = "Sensibilidade", title = "Tá bom assim zé?", color = "Curvas") +
geom_abline(slope = 1)
ggroc(list(Elevada = curva1, Segunda = curva2, terceira = curva3)) +
scale_color_viridis_d() + theme_bw() +
labs(x = "1-Especificidade", y = "Sensibilidade", title = "Tá bom assim zé?", color = "Curvas") +
geom_abline(intercept = 1, slope = 1)
dados <- read_csv2("dados.csv")
curva1 <- roc(dados$labels1, dados$prob)
curva2 <- roc(dados$labels2, dados$prob)
curva3 <- roc(dados$labels3, dados$prob)
ggroc(list(Elevada = curva1, Segunda = curva2, terceira = curva3)) +
scale_color_viridis_d() + theme_bw() +
labs(x = "1-Especificidade", y = "Sensibilidade", title = "Tá bom assim zé?", color = "Curvas") +
geom_abline(intercept = 1, slope = 1)
dados <- read_csv2("dados.csv")
curva1 <- roc(dados$labels1, dados$prob)
curva2 <- roc(dados$labels2, dados$prob)
curva3 <- roc(dados$labels3, dados$prob)
ggroc(list(Elevada = curva1, Segunda = curva2, terceira = curva3)) +
scale_color_viridis_d() + theme_bw() +
labs(x = "1-Especificidade", y = "Sensibilidade", title = "Tá bom assim zé?", color = "Curvas") +
geom_abline(intercept = 1, slope = 1)
ggroc(list(Elevada = curva1, Segunda = curva2, terceira = curva3)) +
scale_color_viridis_d() + theme_bw() +
labs(x = "1-Especificidade", y = "Sensibilidade",
title = "Tá bom assim zé?", color = "Curvas") +
geom_abline(intercept = 1, slope = 1)
ggroc(list(Elevada = curva1, Segunda = curva2, terceira = curva3)) +
scale_color_viridis_d() + theme_bw() +
labs(x = "1-Especificidade", y = "Sensibilidade", color = "Curvas") +
geom_abline(intercept = 1, slope = 1)
ggroc(list(Elevada = curva1, Média = curva2, Baixa = curva3)) +
scale_color_viridis_d() + theme_bw() +
labs(x = "1-Especificidade", y = "Sensibilidade", color = "Curvas") +
geom_abline(intercept = 1, slope = 1)
ggroc(list(Elevada = curva1, Média = curva2, Baixa = curva3)) +
scale_color_viridis_d() + theme_bw() +
labs(x = "1-Especificidade", y = "Sensibilidade", color = "Discriminação") +
geom_abline(intercept = 1, slope = 1, pwd = 1)
ggroc(list(Elevada = curva1, Média = curva2, Baixa = curva3)) +
scale_color_viridis_d() + theme_bw() +
labs(x = "1-Especificidade", y = "Sensibilidade", color = "Discriminação") +
geom_abline(intercept = 1, slope = 1, linetype = "dashed")
ggroc(list(Elevada = curva1, Média = curva2, Baixa = curva3)) +
scale_color_viridis_d() + theme_bw() +
labs(x = "1-Especificidade", y = "Sensibilidade", color = "Discriminação") +
geom_abline(intercept = 1, slope = 1, linetype = "dashed", cex = 2)
ggroc(list(Elevada = curva1, Média = curva2, Baixa = curva3)) +
scale_color_viridis_d() + theme_bw() +
labs(x = "1-Especificidade", y = "Sensibilidade", color = "Discriminação") +
geom_abline(intercept = 1, slope = 1, linetype = "dashed", cex = 1)
ggroc(list(Elevada = curva1, Média = curva2, Baixa = curva3), cex = 1) +
scale_color_viridis_d() + theme_bw() +
labs(x = "1-Especificidade", y = "Sensibilidade", color = "Discriminação") +
geom_abline(intercept = 1, slope = 1, linetype = "dashed", cex = 1)
ggroc(list(Elevada = curva1, Média = curva2, Baixa = curva3), cex = 1) +
scale_color_viridis_d() + theme_bw() +
labs(x = "1-Especificidade", y = "Sensibilidade", color = "Discriminação") +
geom_abline(intercept = 1, slope = 1, linetype = "dashed", cex = 1) +
scale_color_manual(values=c("#999999", "#E69F00", "#56B4E9"))
ggroc(list(Elevada = curva1, Média = curva2, Baixa = curva3), cex = 1) +
scale_color_viridis_d() + theme_bw() +
labs(x = "1-Especificidade", y = "Sensibilidade", color = "Discriminação") +
geom_abline(intercept = 1, slope = 1, linetype = "dashed", cex = 1)
ggroc(list(Elevada = curva1, Média = curva2, Baixa = curva3), cex = 1) +
scale_color_manual(values=c("#c62b3a", "#E69F00", "#56B4E9")) +
theme_bw() +
labs(x = "1-Especificidade", y = "Sensibilidade", color = "Discriminação") +
geom_abline(intercept = 1, slope = 1, linetype = "dashed", cex = 1)
ggroc(list(Elevada = curva1, Média = curva2, Baixa = curva3), cex = 1) +
scale_color_manual(values=c("#c62b3a", "#E69F00", "#c62b3a")) +
theme_bw() +
labs(x = "1-Especificidade", y = "Sensibilidade", color = "Discriminação") +
geom_abline(intercept = 1, slope = 1, linetype = "dashed", cex = 1)
ggroc(list(Elevada = curva1, Média = curva2, Baixa = curva3), cex = 1) +
scale_color_manual(values=c(Elevada = "#c62b3a", Média = "#c62b3a", Baixa = "#c62b3a")) +
theme_bw() +
labs(x = "1-Especificidade", y = "Sensibilidade", color = "Discriminação") +
geom_abline(intercept = 1, slope = 1, linetype = "dashed", cex = 1)
ggroc(list(Elevada = curva1, Média = curva2, Baixa = curva3), cex = 1) +
scale_color_manual(values=c(Elevada = "#c62b3a", Média = "blue", Baixa = "#c62b3a")) +
theme_bw() +
labs(x = "1-Especificidade", y = "Sensibilidade", color = "Discriminação") +
geom_abline(intercept = 1, slope = 1, linetype = "dashed", cex = 1)
ggroc(list(Elevada = curva1, Média = curva2, Baixa = curva3), cex = 1) +
scale_color_manual(values=c(Elevada = "#c62b3a", Média = "blue", Baixa = "#bfc13a")) +
theme_bw() +
labs(x = "1-Especificidade", y = "Sensibilidade", color = "Discriminação") +
geom_abline(intercept = 1, slope = 1, linetype = "dashed", cex = 1)
ggroc(list(Elevada = curva1, Média = curva2, Baixa = curva3), cex = 1) +
scale_color_manual(values=c(Elevada = "#c62b3a", Média = "#604ed3", Baixa = "#bfc13a")) +
theme_bw() +
labs(x = "1-Especificidade", y = "Sensibilidade", color = "Discriminação") +
geom_abline(intercept = 1, slope = 1, linetype = "dashed", cex = 1)
ggroc(list(Elevada = curva1, Média = curva2, Baixa = curva3), cex = 1) +
scale_color_manual(values=c(Elevada = "#c62b3a", Média = "#604ed3", Baixa = "#bfc13a")) +
theme_bw() + theme(legend.position = "top") +
labs(x = "1-Especificidade", y = "Sensibilidade", color = "Discriminação") +
geom_abline(intercept = 1, slope = 1, linetype = "dashed", cex = 1)
ggroc(list(Elevada = curva1, Média = curva2, Baixa = curva3), cex = 1) +
scale_color_manual(labels = c("Elevada", "Média", "Baixa"), values=c(Elevada = "#c62b3a", Média = "#604ed3", Baixa = "#bfc13a")) +
theme_bw() + theme(legend.position = "top") +
labs(x = "1-Especificidade", y = "Sensibilidade", color = "Discriminação") +
geom_abline(intercept = 1, slope = 1, linetype = "dashed", cex = 1)
ggroc(list(Elevada = curva1, Média = curva2, Baixa = curva3), cex = 1) +
scale_color_manual(labels = c("Elevada", "Média", "Baixa"),
values=c(Elevada = "#c62b3a", Média = "#604ed3", Baixa = "#bfc13a")) +
theme_bw() + theme(legend.position = c(0.25, 0.50)) +
labs(x = "1-Especificidade", y = "Sensibilidade", color = "Discriminação") +
geom_abline(intercept = 1, slope = 1, linetype = "dashed", cex = 1)
ggroc(list(Elevada = curva1, Média = curva2, Baixa = curva3), cex = 1) +
scale_color_manual(labels = c("Elevada", "Média", "Baixa"),
values=c(Elevada = "#c62b3a", Média = "#604ed3", Baixa = "#bfc13a")) +
theme_bw() + theme(legend.position = c(0.50, 0.25)) +
labs(x = "1-Especificidade", y = "Sensibilidade", color = "Discriminação") +
geom_abline(intercept = 1, slope = 1, linetype = "dashed", cex = 1)
ggroc(list(Elevada = curva1, Média = curva2, Baixa = curva3), cex = 1) +
scale_color_manual(labels = c("Elevada", "Média", "Baixa"),
values=c(Elevada = "#c62b3a", Média = "#604ed3", Baixa = "#bfc13a")) +
theme_bw() + theme(legend.position = c(0.25, 0.25)) +
labs(x = "1-Especificidade", y = "Sensibilidade", color = "Discriminação") +
geom_abline(intercept = 1, slope = 1, linetype = "dashed", cex = 1)
ggroc(list(Elevada = curva1, Média = curva2, Baixa = curva3), cex = 1) +
scale_color_manual(labels = c("Elevada", "Média", "Baixa"),
values=c(Elevada = "#c62b3a", Média = "#604ed3", Baixa = "#bfc13a")) +
theme_bw() + theme(legend.position = c(0.75, 0.25)) +
labs(x = "1-Especificidade", y = "Sensibilidade", color = "Discriminação") +
geom_abline(intercept = 1, slope = 1, linetype = "dashed", cex = 1)
ggroc(list(Elevada = curva1, Média = curva2, Baixa = curva3), cex = 1) +
scale_color_manual(labels = c("Elevada", "Média", "Baixa"),
values=c(Elevada = "#c62b3a", Média = "#604ed3", Baixa = "#bfc13a")) +
theme_bw() + theme(legend.position = c(0.75, 0.35)) +
labs(x = "1-Especificidade", y = "Sensibilidade", color = "Discriminação") +
geom_abline(intercept = 1, slope = 1, linetype = "dashed", cex = 1)
ggroc(list(Elevada = curva1, Média = curva2, Baixa = curva3), cex = 1) +
scale_color_manual(labels = c("Elevada", "Média", "Baixa"), breaks = c("Elevada", "Média", "Baixa"),
values=c(Elevada = "#c62b3a", Média = "#604ed3", Baixa = "#bfc13a")) +
theme_bw() + theme(legend.position = c(0.75, 0.35)) +
labs(x = "1-Especificidade", y = "Sensibilidade", color = "Discriminação") +
geom_abline(intercept = 1, slope = 1, linetype = "dashed", cex = 1)
ggroc(list(Elevada = curva1, Média = curva2, Baixa = curva3), cex = 1) +
scale_color_manual(labels = c("Elevada", "Média", "Baixa"),
breaks = c("Elevada", "Média", "Baixa"),
values=c(Elevada = "#c62b3a", Média = "#604ed3", Baixa = "#bfc13a")) +
theme_bw() + theme(legend.position = c(0.75, 0.35), legend.box.margin = "black") +
labs(x = "1-Especificidade", y = "Sensibilidade", color = "Discriminação") +
geom_abline(intercept = 1, slope = 1, linetype = "dashed", cex = 1)
ggroc(list(Elevada = curva1, Média = curva2, Baixa = curva3), cex = 1) +
scale_color_manual(labels = c("Elevada", "Média", "Baixa"),
breaks = c("Elevada", "Média", "Baixa"),
values=c(Elevada = "#c62b3a", Média = "#604ed3", Baixa = "#bfc13a")) +
theme_bw() + theme(legend.position = c(0.75, 0.35)) +
labs(x = "1-Especificidade", y = "Sensibilidade", color = "Discriminação") +
geom_abline(intercept = 1, slope = 1, linetype = "dashed", cex = 1)
ggroc(list(Elevada = curva1, Média = curva2, Baixa = curva3), cex = 1) +
scale_color_manual(labels = c("Elevada", "Média", "Baixa"),
breaks = c("Elevada", "Média", "Baixa"),
values=c(Elevada = "#c62b3a", Média = "#604ed3", Baixa = "#bfc13a")) +
theme_bw() + theme(legend.position = c(0.75, 0.35), legend.background = element_rect(colour = "black")) +
labs(x = "1-Especificidade", y = "Sensibilidade", color = "Discriminação") +
geom_abline(intercept = 1, slope = 1, linetype = "dashed", cex = 1)
library(here)
here("dados.csv")
library(tidyverse)
ggplot(mtcars) + geom_line(x = c(0, 1), y = c(0, 1))
ggplot(mtcars) + geom_point(aes(cyl, wt)
)
ggplot(mtcars) + geom_point(aes(cyl, wt)) + geom_line(x = c(4, 8), y = c(2, 5))
ggplot(mtcars) + geom_point(aes(cyl, wt)) + geom_line(aes(x = c(4, 8), y = c(2, 5)))
ggplot(mtcars) + geom_point(aes(cyl, wt)) + geom_line(aes(x = c(4, 8), y = c(2, 5), group = 1))
ggplot(mtcars) + geom_point(aes(cyl, wt))
ggplot(mtcars) + geom_point(aes(cyl, wt)) + geom_point(x = 5, y = 4)
ggplot(mtcars) + geom_point(aes(cyl, wt)) + geom_point(x = 5, y = 4, pwd = 4)
ggplot(mtcars) + geom_point(aes(cyl, wt)) + geom_point(x = 5, y = 4, stw = 4)
ggplot(mtcars) + geom_point(aes(cyl, wt)) + geom_point(x = 5, y = 4, shape = 21)
ggplot(mtcars) + geom_point(aes(cyl, wt)) + geom_point(x = 5, y = 4, shape = 21, color = "blue")
ggplot(mtcars) + geom_point(aes(cyl, wt)) + geom_point(x = 5, y = 4, shape = 21, color = "blue", stroke = 2)
ggplot(mtcars) + geom_point(aes(cyl, wt)) + geom_point(x = 5, y = 4, shape = 21, color = "blue", stroke = 2, size = 2)
ggplot(mtcars) + geom_point(aes(cyl, wt)) + geom_point(x = 5, y = 4, shape = 21, color = "blue", stroke = 2, size = 10)
ggplot(mtcars) + geom_point(aes(cyl, wt)) + geom_point(x = 5, y = 4, shape = 21, color = "blue", stroke = 2, size = 10, fill = "white")
install.packages("esquisse")
library(esquisse)
esquisserUI()
esquisser(iris)
esquisser(iris)
esquisser(iris)
esquisser(iris)
knitr::opts_chunk$set(echo = TRUE)
knitr::include_graphics("https://www.google.com/logos/doodles/2019/st-georges-day-2019-6234830302871552.20-2x.png")
ggplot(mtcars) + geom_point(aes(x = mpg, y = wt, color = cyl))
mtcars
ggplot(mtcars) + geom_point(aes(x = mpg, y = wt, color = am))
ggplot(mtcars) + geom_point(aes(x = mpg, y = wt, color = cyl))
mtcars
ggplot(mtcars) + geom_point(aes(x = mpg, y = hp, color = cyl))
ggplot(mtcars) + geom_point(aes(x = hp, y = mpg, color = cyl))
mtcars
ggplot(mtcars) + geom_point(aes(x = hp, y = mpg, color = factor(am)))
ggplot(mtcars) +
geom_point(aes(x = hp, y = mpg, color = factor(am))) +
theme_bw()
tibble(mtcars)
as_tibble(mtcars)
ggplot(mtcars) +
geom_point(aes(x = hp, y = mpg, color = factor(am))) +
theme_bw()
knitr::opts_chunk$set(echo = TRUE)
options(tinytex.verbose = TRUE)
ggplot(mtcars) + geom_density(aes(x = mpg))
library(tidyverse)
ggplot(mtcars) + geom_density(aes(x = mpg))
ggplot(mtcars) + geom_density(aes(x = mpg), fill = "firebrick")
ggplot(mtcars) + geom_density(aes(x = mpg), fill = "firebrick10")
ggplot(mtcars) + geom_density(aes(x = mpg), fill = "firebrick")
ggplot(mtcars) + geom_density(aes(x = mpg), fill = "firebrick", color = "firebrick")
knitr::opts_chunk$set(echo = TRUE)
options(tinytex.verbose = TRUE)
library(tidyverse)
xaringan:::inf_mr()
xaringan:::inf_mr()
